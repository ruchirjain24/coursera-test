int dx[] = {1,0,-1, 0};
int dy[] = {0, 1, 0, -1};

void dfs(int r, int c, vector<string> &A){
    if(A[r][c] != 'X') return;
    A[r][c] = 'O';
    for(int i = 0; i < 4; i++){
        if(r+dx[i] >= 0 && r+dx[i] < A.size() 
        && c+dy[i] >= 0 && c+dy[i] < A[0].size()){
            dfs(r+dx[i] , c+dy[i], A);
        }
    }
    
}
int Solution::black(vector<string> &A) {
    //vector<vector<int> A[0].size()> vis(A.size(), false);
    int cnt = 0;
    for(int i = 0; i < A.size(); i++){
        for(int j = 0; j < A[0].size(); j++){
            if(A[i][j] == 'X'){
                dfs(i, j, A);
                cnt++;
            }
        }
    }
    return cnt;
}