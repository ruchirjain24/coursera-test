bool dfsCycle(int i, int p, vector<int>& vis, vector<vector<int>>& adj){
    vis[i] = 1;
    for(auto x:adj[i]){
        if(!vis[x]){
            if(dfsCycle(x, i, vis, adj)) return true;
        }
        else if(x != p) return true;
    }
    return false;
}
int Solution::solve(int n, vector<vector<int> > &b) {
    vector<vector<int>> adj(n+1);
    for(int i=0;i<b.size();i++){
        adj[b[i][0]].push_back(b[i][1]);
        adj[b[i][1]].push_back(b[i][0]);
    }
    
    vector<int> vis(n+1, 0);
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            if(dfsCycle(i, -1, vis, adj)) return 1;
        }
    }
    return 0;
}