int Solution::solve(vector<vector<int> > &A) {
    int n=A.size();
    vector<int> dp(3);
    dp[0]=A[n-1][0];dp[1]=A[n-1][1];dp[2]=A[n-1][2];
    for(int i=n-2;i>=0;i--)
    {
        int a=A[i][0]+min(dp[1],dp[2]);
        int b=A[i][2]+min(dp[0],dp[1]);
        int c=A[i][1]+min(dp[0],dp[2]);
        dp[0]=a;dp[2]=b;dp[1]=c;
    }
    int ans=min(dp[0],min(dp[1],dp[2]));
    return ans;
}


OR


int Solution::solve(vector<vector<int> > &A) {
    int N=A.size();
    if(N==0)
        return 0;
    vector<vector<int> > dp(N, vector<int>(3, 0));
    dp[0][0] = A[0][0];
    dp[0][1] = A[0][1];
    dp[0][2] = A[0][2];
    for (int i = 1; i < N; i++) {
        dp[i][0] = min(dp[i - 1][1],dp[i - 1][2])+ A[i][0];
        dp[i][1] = min(dp[i - 1][0],dp[i - 1][2])+ A[i][1];
        dp[i][2] = min(dp[i - 1][0],dp[i - 1][1])+ A[i][2];
    }
    return min({dp[N - 1][0],min(dp[N - 1][1],dp[N - 1][2])});
}