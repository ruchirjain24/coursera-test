int Solution::uniquePathsWithObstacles(vector<vector<int> > &A) {
    int m=A.size();
    int n=A[0].size();
    vector<vector<int>> dp(m+1,vector<int> (n+1,0));
    if(A[0][0]==1)
        return 0;
    dp[1][1]=1;
    for(int i=2;i<=m;i++){
        if(A[i-1][0]==0)
            dp[i][1]=dp[i-1][1];
    }
    for(int i=2;i<=n;i++){
        if(A[0][i-1]==0)
            dp[1][i]=dp[1][i-1];
    }
    for(int i=2;i<=m;i++){
        for(int j=2;j<=n;j++){
            if(A[i-1][j-1]==0)
                dp[i][j]=dp[i-1][j] + dp[i][j-1];
            else
                dp[i][j]=0;
        }
    }
    return dp[m][n];
}