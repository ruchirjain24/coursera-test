int hist(vector<int> &A){
    stack<int> s;
    int ans=0;
    int n=A.size();
    int i;
    for(i=0;i<n;i++){
        while(!s.empty() && A[i]<A[s.top()]){
            int j=s.top();
            s.pop();
            ans=max(ans,A[j]*((s.empty())?i:i-s.top()-1));
        }
        s.push(i);
    }
    while(!s.empty()){
        int j=s.top();
        s.pop();
        ans=max(ans,A[j]*((s.empty())?i:i-s.top()-1));
    }
    return ans;
}
int Solution::maximalRectangle(vector<vector<int> > &A) {
    int n=A.size();
    if(!n)
        return 0;
    int m=A[0].size();
    if(!m)
        return 0;
    vector<vector<int>> dp(n,vector<int>(m,0));
    int ans=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(A[i][j]==0)
                continue;
            if(i==0)
                dp[i][j]=1;
            else
                dp[i][j]=dp[i-1][j]+1;
        }
        ans=max(ans,hist(dp[i]));
    }
    return ans;
}