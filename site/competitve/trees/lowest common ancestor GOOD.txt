bool find(TreeNode* root,int B){
    if(root==NULL)
        return 0;
    if(root->val==B)
        return 1;
    return find(root->left,B) || find(root->right,B);
}
int helper(TreeNode* A,int B,int C){
    if(!(find(A,B) && find(A,C)))
        return -1;
    bool left=find(A->left,B) && find(A->left,C);
    bool right=find(A->right,B) && find(A->right,C);
    if(left){
        return helper(A->left,B,C);
    }
    if(right){
        return helper(A->right,B,C);
    }
    return A->val;
}
int Solution::lca(TreeNode* A, int B, int C) {
    int ans=helper(A,B,C);
    return ans;
}